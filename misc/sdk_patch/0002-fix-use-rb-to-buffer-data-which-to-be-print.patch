From 30088bb15af6a2cecccc009c5d6286b775baaa65 Mon Sep 17 00:00:00 2001
From: taorye <taorye@outlook.com>
Date: Tue, 29 Nov 2022 12:15:02 +0800
Subject: [PATCH 2/5] fix: use rb to buffer data which to be print

Signed-off-by: taorye <taorye@outlook.com>
---
 bsp/bsp_common/platform/syscalls.c | 15 ++++++++++++---
 components/usb_stdio/usb_stdio.c   | 13 ++++++++++---
 components/usb_stdio/usb_stdio.h   |  3 +++
 3 files changed, 25 insertions(+), 6 deletions(-)

diff --git a/bsp/bsp_common/platform/syscalls.c b/bsp/bsp_common/platform/syscalls.c
index 480eaafc..00830821 100644
--- a/bsp/bsp_common/platform/syscalls.c
+++ b/bsp/bsp_common/platform/syscalls.c
@@ -196,6 +196,8 @@ int _wait_r(struct _reent *ptr, int *status)
     return -1;
 }
 
+#include "ring_buffer.h"
+#include "usb_stdio.h"
 _ssize_t _write_r(struct _reent *ptr, int fd, const void *buf, size_t nbytes)
 {
 #ifndef CONF_VFS_ENABLE
@@ -206,9 +208,16 @@ _ssize_t _write_r(struct _reent *ptr, int fd, const void *buf, size_t nbytes)
     }
     return 0;
 #else
-#define CDC_IN_EP 0x82
-    struct device *usb_fs = device_find("usb");
-    usb_dc_ep_write(usb_fs, CDC_IN_EP, (uint8_t *)buf, nbytes, NULL);
+    size_t remained = nbytes;
+    while (remained) {
+        size_t rb_empty_size = 0;
+        if (remained < (rb_empty_size = Ring_Buffer_Get_Empty_Length(&log_buf_rb)))
+            rb_empty_size = remained;
+        if (!rb_empty_size)
+            continue;
+        Ring_Buffer_Write(&log_buf_rb, (uint8_t *)buf, rb_empty_size);
+        remained -= rb_empty_size;
+    };
     return 0;
 #endif
 #else
diff --git a/components/usb_stdio/usb_stdio.c b/components/usb_stdio/usb_stdio.c
index 07e05dec..f615e8d3 100644
--- a/components/usb_stdio/usb_stdio.c
+++ b/components/usb_stdio/usb_stdio.c
@@ -100,8 +100,11 @@ static void usbd_cdc_acm_bulk_out(uint8_t ep)
     usbd_ep_read(ep, NULL, 0, NULL);
 }
 
+Ring_Buffer_Type log_buf_rb;
+static struct device *usb_fs = NULL;
 static void usbd_cdc_acm_bulk_in(uint8_t ep)
 {
+    usb_dc_send_from_ringbuffer(usb_fs, &log_buf_rb, ep);
 }
 
 static usbd_class_t cdc_class;
@@ -110,13 +113,17 @@ static usbd_interface_t cdc_data_intf;
 
 static usbd_endpoint_t cdc_out_ep = { .ep_addr = CDC_OUT_EP, .ep_cb = usbd_cdc_acm_bulk_out };
 
-static usbd_endpoint_t cdc_in_ep = { .ep_addr = CDC_IN_EP, .ep_cb = NULL };
+static usbd_endpoint_t cdc_in_ep = { .ep_addr = CDC_IN_EP, .ep_cb = usbd_cdc_acm_bulk_in };
 
 void usb_stdio_init()
 {
     shell_init();
     shell_set_print(printf);
 
+#define LOG_BUF_SIZE (1024)
+    static uint8_t log_buf_mem[LOG_BUF_SIZE] __attribute__((section(".system_ram")));
+    Ring_Buffer_Init(&log_buf_rb, log_buf_mem, LOG_BUF_SIZE, cpu_global_irq_disable, cpu_global_irq_enable);
+
     usbd_desc_register(cdc_descriptor);
 
     usbd_cdc_add_acm_interface(&cdc_class, &cdc_cmd_intf);
@@ -125,10 +132,10 @@ void usb_stdio_init()
     usbd_interface_add_endpoint(&cdc_data_intf, &cdc_in_ep);
 
     extern struct device *usb_dc_init(void);
-    struct device *usb_fs = usb_dc_init();
+    usb_fs = usb_dc_init();
 
     if (usb_fs) {
-        device_control(usb_fs, DEVICE_CTRL_SET_INT, (void *)(USB_EP1_DATA_OUT_IT));
+        device_control(usb_fs, DEVICE_CTRL_SET_INT, (void *)(USB_EP1_DATA_OUT_IT | USB_EP2_DATA_IN_IT));
     }
 
     while (!usb_device_is_configured()) {
diff --git a/components/usb_stdio/usb_stdio.h b/components/usb_stdio/usb_stdio.h
index b3616207..31eb060b 100644
--- a/components/usb_stdio/usb_stdio.h
+++ b/components/usb_stdio/usb_stdio.h
@@ -1,3 +1,6 @@
 #pragma once
 
+#include <ring_buffer.h>
+
+extern Ring_Buffer_Type log_buf_rb;
 extern void usb_stdio_init();
-- 
2.38.1

